{
	"compiler": {
		"version": "0.8.22+commit.4fc1097e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_totalVoteToEnd",
						"type": "uint256"
					}
				],
				"name": "create",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentProposal",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "approve",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "reject",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "pass",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalVoteToEnd",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "currentState",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isActive",
								"type": "bool"
							}
						],
						"internalType": "struct ProposalContract.Proposal",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "number",
						"type": "uint256"
					}
				],
				"name": "getProposal",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "approve",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "reject",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "pass",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "totalVoteToEnd",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "currentState",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isActive",
								"type": "bool"
							}
						],
						"internalType": "struct ProposalContract.Proposal",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "isVoted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "setOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "terminateProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "choice",
						"type": "uint8"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/proposalContract.sol": "ProposalContract"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Counters.sol": {
			"keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
			"license": "MIT",
			"urls": [
				"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
				"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
			]
		},
		"contracts/proposalContract.sol": {
			"keccak256": "0x4f80684b26c6fb262ba41ef03eb9a9a01e060e686d2ce767f0f95379d745e544",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbb2889d631dabb88d7e8673420e17ea2e05d195d57093a6dabf10ccc20e7c24",
				"dweb:/ipfs/QmU2syzbij8X7yGgmfrrimkcwVyyAqUgaENJhaWH1eyxZF"
			]
		}
	},
	"version": 1
}